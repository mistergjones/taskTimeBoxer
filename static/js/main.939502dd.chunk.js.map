{"version":3,"sources":["Components/Header.jsx","Components/Footer.jsx","Components/Note.jsx","Components/Description.jsx","Components/CreateArea.jsx","Components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","Description","CreateArea","useState","isExpanded","setExpanded","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"gNAceA,MAXf,WACI,OACI,gCACI,4BACI,kBAAC,IAAD,MADJ,6BCKGC,MATf,WACI,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACI,gCACI,+CAAgBF,K,iBCcbG,MAjBf,SAAcC,GAMV,OACI,yBAAKC,UAAU,QACX,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAThB,WAEIJ,EAAMK,SAASL,EAAMM,MAQb,kBAAC,IAAD,SCHDC,MATf,WACI,OACI,yBAAKN,UAAU,eAAf,8FAE2B,M,yDC6EpBO,MA9Ef,SAAoBR,GAAO,MAGWS,oBAAS,GAHpB,mBAGhBC,EAHgB,KAGJC,EAHI,OAOCF,mBAAS,CAC7BP,MAAO,GACPC,QAAS,KATU,mBAOhBS,EAPgB,KAOVC,EAPU,KAYvB,SAASC,EAAaC,GAAO,MAEDA,EAAMC,OAAtBC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAGdL,GAAQ,SAACM,GACL,OAAO,eAEAA,EAFP,eAKKF,EAAOC,OAqBpB,OACI,6BACI,0BAAMjB,UAAU,eACXS,EACG,2BACIO,KAAK,QACLG,SAAUN,EACVI,MAAON,EAAKV,MACZmB,YAAY,UAEhB,KACJ,8BACIJ,KAAK,UACLb,QAlBhB,WAEIO,GAAY,IAiBAS,SAAUN,EACVI,MAAON,EAAKT,QACZkB,YAAY,iBACZC,KAAMZ,EAAa,EAAI,IAE3B,2BACIO,KAAK,WACLI,YAAY,8CAGhB,kBAACE,EAAA,EAAD,CAAMC,GAAId,GACN,kBAACe,EAAA,EAAD,CAAKrB,QAzCrB,SAAoBW,GAChBf,EAAM0B,MAAMd,GAEZC,EAAQ,CACJX,MAAO,GACPC,QAAS,KAGbY,EAAMY,mBAkCU,kBAAC,IAAD,WCvBTC,MA7Cf,WAAe,MAEenB,mBAAS,IAFxB,mBAEJoB,EAFI,KAEGC,EAFH,KAaX,SAASC,EAAWzB,GAEhBwB,GAAS,SAACE,GACN,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GAE/B,OAAOA,IAAU7B,QAK7B,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAYoB,MAvBpB,SAAiBU,GACbN,GAAS,SAACE,GAEN,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAqBrBP,EAAMQ,KAAI,SAACH,EAAUC,GAClB,OACI,kBAAC,EAAD,CACIG,IAAKH,EACL7B,GAAI6B,EACJjC,MAAOgC,EAAShC,MAChBC,QAAS+B,EAAS/B,QAClBE,SAAU0B,OAItB,kBAAC,EAAD,QC3CZQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.939502dd.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction Header() {\n    return (\n        <header>\n            <h1>\n                <HighlightIcon />\n                Task Time-boxer Ver 0.1\n            </h1>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n    const year = new Date().getFullYear();\n    return (\n        <footer>\n            <p>Copyright â“’ {year}</p>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n    function handleClick() {\n        //\n        props.onDelete(props.id); // will trigger the function in app.jsx\n    }\n\n    return (\n        <div className=\"note\">\n            <h1>{props.title}</h1>\n            <p>{props.content}</p>\n            <button onClick={handleClick}>\n                <DeleteIcon />\n            </button>\n        </div>\n    );\n}\n\nexport default Note;\n","import React from \"react\";\n\nfunction Description() {\n    return (\n        <div className=\"description\">\n            Stop procrastinating..simply add some tasks and a countdown timer to\n            keep driving outcomes.{\" \"}\n        </div>\n    );\n}\n\nexport default Description;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n    // establish a constant for tracking the state of the note area\n    // to see if it needs expanding when addinga note\n    const [isExpanded, setExpanded] = useState(false);\n\n    // statefull constants for both title and content\n    // set initial state to blank values\n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\",\n    });\n\n    function handleChange(event) {\n        // destruture to hold the name and the value when the input changes\n        const { name, value } = event.target;\n\n        // use the name and value to setNote\n        setNote((prevNote) => {\n            return {\n                // now return all the prevous notes and add the newone\n                ...prevNote,\n                // require the [name] as opposed to name to ensure it references\n                // the name constant above. This is how REACT works\n                [name]: value,\n            };\n        });\n    }\n\n    function submitNote(event) {\n        props.onAdd(note);\n        // clear the note to ensure we go back to the placeholder text\n        setNote({\n            title: \"\",\n            content: \"\",\n        });\n        // prevent reloading of screen\n        event.preventDefault();\n    }\n\n    function expand() {\n        // set expanded to true\n        setExpanded(true);\n    }\n\n    return (\n        <div>\n            <form className=\"create-note\">\n                {isExpanded ? (\n                    <input\n                        name=\"title\"\n                        onChange={handleChange}\n                        value={note.title}\n                        placeholder=\"Title\"\n                    />\n                ) : null}\n                <textarea\n                    name=\"content\"\n                    onClick={expand}\n                    onChange={handleChange}\n                    value={note.content}\n                    placeholder=\"Take a note...\"\n                    rows={isExpanded ? 3 : 1}\n                />\n                <input\n                    name=\"Duration\"\n                    placeholder=\"Duration countdown... NOT IMPLEMENTED YET\"\n                />\n\n                <Zoom in={isExpanded}>\n                    <Fab onClick={submitNote}>\n                        <AddIcon />\n                    </Fab>\n                </Zoom>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport Description from \"./Description\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n    // an array of notes constant to track state\n    const [notes, setNotes] = useState([]);\n\n    // recenve the new note to this function\n    function addNote(newNote) {\n        setNotes((prevNotes) => {\n            // add to the notes array via the spread array.\n            return [...prevNotes, newNote];\n        });\n    }\n\n    // id of the note to be deleted\n    function deleteNote(id) {\n        // get hold of previous notes array\n        setNotes((prevNotes) => {\n            return prevNotes.filter((noteItem, index) => {\n                // keep everything but the index id we want to delete\n                return index !== id;\n            });\n        });\n    }\n\n    return (\n        <div>\n            <Header />\n            <Description />\n\n            <CreateArea onAdd={addNote} />\n            {notes.map((noteItem, index) => {\n                return (\n                    <Note\n                        key={index}\n                        id={index}\n                        title={noteItem.title}\n                        content={noteItem.content}\n                        onDelete={deleteNote}\n                    />\n                );\n            })}\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}